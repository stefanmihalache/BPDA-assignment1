from multiversx_sdk import UserSignerfrom multiversx_sdk import Addressfrom multiversx_sdk import ProxyNetworkProvider, QueryRunnerAdapter, SmartContractQueriesControllerfrom pathlib import Pathimport osclass TransactionManager:    def __init__(self):        self.signer = UserSigner.from_pem_file(Path("interactor/wallet.pem"))        ADDRESS =  os.environ.get("ADDRESS")        self.sender_address = Address.new_from_bech32(ADDRESS)        SC_ADDRESS = os.environ.get("SC_ADDRESS")        self.contract = Address.new_from_bech32(SC_ADDRESS)        METACHAIN_ADDRESS = os.environ.get("METACHAIN_ADDRESS")        self.metachain_address = Address.new_from_bech32(METACHAIN_ADDRESS)        self.provider = provider = ProxyNetworkProvider("https://devnet-gateway.multiversx.com")        self.query_runner = QueryRunnerAdapter(self.provider)        self.query_controller = SmartContractQueriesController(self.query_runner)        self.NFT_NAME = "stefan.mihalache01"        self.COLLECTION_NAME = "Mihalache"        self.COLLECTION_TICKER = "BPDA"    def get_sender_address(self):        return self.sender_address    def get_signer(self,):        return self.signer    def get_contract(self,):        return self.contract    def get_metachain_address(self):        return self.metachain_address    def get_network_provider(self,):        return self.provider    def get_query_controller(self,):        return self.query_controller    def get_nft_name(self,):        return self.NFT_NAME    def get_collection_name(self,):        return self.COLLECTION_NAME    def get_collection_ticker(self,):        return self.COLLECTION_TICKER